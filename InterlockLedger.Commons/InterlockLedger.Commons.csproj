<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <LangVersion>preview</LangVersion>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>InterlockLedger Network Team</Authors>
    <Company>InterlockLedger Network</Company>
    <Copyright>Copyright (c) 2018-2022 InterlockLedger Network</Copyright>
    <Description>This library implements lots of lifesaving classes and extensions.</Description>
    <PackageProjectUrl>https://interlockledger.network/</PackageProjectUrl>
    <Product>InterlockLedger</Product>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/interlockledger/interlockledger-commons.git</RepositoryUrl>
    <Version>8.0.0</Version>
    <PackageId>InterlockLedger.Commons</PackageId>
    <PackageReleaseNotes>Slimming down a little more the ITextual interface</PackageReleaseNotes>
    <PackageIcon>il2.png</PackageIcon>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <AnalysisLevel>preview</AnalysisLevel>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>DEBUG</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Using Include="System.Diagnostics.CodeAnalysis" />
    <Using Include="System.Runtime.CompilerServices" />
    <Using Include="System.Globalization" />
    <Using Include="System.Text" />
    <Using Include="System.Text.RegularExpressions" />
    <Using Include="System.ComponentModel" />
    <Using Include="System.Text.Json.Serialization" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\il2.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <Target Name="TagSources">
    <Exec Command="git tag v$(Version)" ContinueOnError="true" StandardErrorImportance="low" StandardOutputImportance="low" IgnoreExitCode="true" />
    <Message Importance="high" Text="Recent tags:" />
    <Exec Command="git tag --sort=-creatordate | grep v | head -n 1" ContinueOnError="true" StandardErrorImportance="high" StandardOutputImportance="high" IgnoreExitCode="true" />
  </Target>

  <Target Name="PublishLocally" AfterTargets="Pack" Condition="Exists('$(INTERLOCK_LOCAL_NUGETS_FOLDER)')">
    <ItemGroup>
      <NugetPackages Include="$(PackageOutputAbsolutePath)\$(PackageId).$(Version).nupkg" />
    </ItemGroup>
    <Message Importance="high" Text="Publish to Local Nugets Folder '$(INTERLOCK_LOCAL_NUGETS_FOLDER)'" />
    <Copy DestinationFolder="$(INTERLOCK_LOCAL_NUGETS_FOLDER)" SourceFiles="@(NugetPackages)" ContinueOnError="true" SkipUnchangedFiles="false" />
  </Target>

  <Target Name="NugetOrg" Condition="'$(Configuration)'=='Release'" DependsOnTargets="Pack">
    <PropertyGroup>
      <NugetPackage>$(PackageOutputAbsolutePath)$(PackageId).$(Version).nupkg</NugetPackage>
    </PropertyGroup>
    <Message Importance="high" Text="Pushing $(NugetPackage)" Condition="Exists('$(NugetPackage)')" />
    <Exec Command="dotnet nuget push --skip-duplicate -s nuget.org $(NugetPackage)" ContinueOnError="true" StandardErrorImportance="high" StandardOutputImportance="high" IgnoreExitCode="true" Condition="Exists('$(NugetPackage)')" />
  </Target>

  <ItemGroup>
    <PackageReference Include="System.Memory" Version="4.5.5" />
  </ItemGroup>
</Project>
